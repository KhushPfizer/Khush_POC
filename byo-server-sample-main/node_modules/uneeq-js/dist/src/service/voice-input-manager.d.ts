import { Subject } from 'rxjs';
import { UneeqOptions } from '../types/UneeqOptions';
import { VoiceInputMode } from '../types/VoiceInputMode';
import { API } from './api';
export declare class VoiceInputManager {
    private options;
    private api;
    private messages;
    private enableMicrophone;
    private readonly microphoneEngageVolume;
    private readonly microphoneDisengageVolume;
    private readonly voiceActivityNotSpeakingTimeoutMS;
    private readonly voiceActivityAllowInterruptions;
    private soundMeter;
    private audioContext;
    private digitalHumanSpeaking;
    private recording;
    private silenceTimeout?;
    private stream?;
    constructor(options: UneeqOptions, api: API, messages: Subject<any>, enableMicrophone: (enabled: boolean) => void);
    setVoiceInputMode(mode: VoiceInputMode | string): void;
    startRecording(): void;
    stopRecording(): void;
    handleSessionEnd(): void;
    resumeAudioContext(): void;
    initMicActivity(stream: MediaStream): void;
    private audioContextNotSupported;
    private handleAppMessages;
    private requestNotSupportedInVoiceActivityMode;
    private apiStartRecording;
    private apiStopRecording;
    private micActivityConnected;
    private handleVoiceActivity;
    private clearSilenceTimeout;
}
